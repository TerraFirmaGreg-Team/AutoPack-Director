package net.jan.moddirector.ui.page;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import net.jan.moddirector.i18n.Messages;
import net.jan.moddirector.ui.components.ScrollablePane;
import net.jan.moddirector.core.manage.select.InstallSelector;
import net.jan.moddirector.core.manage.select.SelectableInstallOption;

import javax.swing.*;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.util.List;
import java.util.concurrent.CountDownLatch;

public class ModSelectionPage extends JPanel {
    private final Messages messages;
    private final CountDownLatch nextLatch = new CountDownLatch(1);
    private JPanel root;
    private JLabel pageTitle;
    private JPanel content;
    private JButton nextButton;

    public ModSelectionPage(InstallSelector selector, Messages messages) {
        this.messages = messages;
        $$$setupUI$$$();
        pageTitle.setText(messages.get("mod_director.selection_page.title"));
        setLayout(new BorderLayout());
        add(root, BorderLayout.CENTER);
        selector.getSingleOptions().forEach(this::setupSingleOption);
        selector.getGroupOptions().forEach(this::setupGroupOption);
        nextButton.addActionListener((e) -> nextLatch.countDown());
        nextButton.setText(messages.get("mod_director.selection_page.next_button_label"));
    }

    private void createUIComponents() {
        content = new ScrollablePane(true, false);
        content.setLayout(new BoxLayout(content, BoxLayout.Y_AXIS));
    }

    private void setupSingleOption(SelectableInstallOption option) {
        JPanel optionPanel = new JPanel();
        optionPanel.setLayout(new BoxLayout(optionPanel, BoxLayout.Y_AXIS));

        JCheckBox installCheckBox = new JCheckBox(messages.get("mod_director.selection_page.install"));
        installCheckBox.setSelected(option.isSelected());
        installCheckBox.addItemListener((e) -> option.setSelected(installCheckBox.isSelected()));
        optionPanel.add(installCheckBox);

        if (option.getDescription() != null) {
            optionPanel.add(new JLabel(asHtml(option.getDescription())));
        }

        optionPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(EtchedBorder.RAISED), option.getName(), TitledBorder.CENTER, TitledBorder.TOP));

        content.add(optionPanel);
    }

    private void setupGroupOption(String groupName, List<SelectableInstallOption> options) {
        JPanel groupPanel = new JPanel();
        groupPanel.setLayout(new BoxLayout(groupPanel, BoxLayout.Y_AXIS));

        ButtonGroup group = new ButtonGroup();

        for (SelectableInstallOption option : options) {
            JPanel optionPanel = new JPanel();
            optionPanel.setLayout(new BoxLayout(optionPanel, BoxLayout.Y_AXIS));

            JRadioButton installRadioButton = new JRadioButton(option.getName());
            installRadioButton.setSelected(option.isSelected());
            installRadioButton.addItemListener((e) -> option.setSelected(installRadioButton.isSelected()));
            group.add(installRadioButton);
            optionPanel.add(installRadioButton);

            if (option.getDescription() != null) {
                optionPanel.add(new JLabel(asHtml(option.getDescription())));
            }

            groupPanel.add(optionPanel);
        }

        groupPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(EtchedBorder.RAISED), groupName, TitledBorder.CENTER, TitledBorder.TOP));

        content.add(groupPanel);
    }

    private String asHtml(String content) {
        return "<html>" + content + "</html>";
    }

    public void waitForNext() throws InterruptedException {
        nextLatch.await();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        root = new JPanel();
        root.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        pageTitle = new JLabel();
        pageTitle.setHorizontalAlignment(0);
        pageTitle.setHorizontalTextPosition(0);
        pageTitle.setText("");
        pageTitle.setVerticalAlignment(0);
        pageTitle.setVerticalTextPosition(0);
        root.add(pageTitle, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setHorizontalScrollBarPolicy(31);
        scrollPane1.setVerticalScrollBarPolicy(20);
        root.add(scrollPane1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLoweredBevelBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        scrollPane1.setViewportView(content);
        nextButton = new JButton();
        nextButton.setText("Next");
        root.add(nextButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

}
